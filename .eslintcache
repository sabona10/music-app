[{"B:\\Project 4\\music-app\\src\\index.js":"1","B:\\Project 4\\music-app\\src\\pages\\App\\App.jsx":"2","B:\\Project 4\\music-app\\src\\utilities\\users-service.js":"3","B:\\Project 4\\music-app\\src\\pages\\AuthPage\\AuthPage.jsx":"4","B:\\Project 4\\music-app\\src\\components\\NavBar\\NavBar.jsx":"5","B:\\Project 4\\music-app\\src\\utilities\\users-api.js":"6","B:\\Project 4\\music-app\\src\\components\\SignUpForm\\SignUpForm.jsx":"7","B:\\Project 4\\music-app\\src\\components\\LoginForm\\LoginForm.jsx":"8","B:\\Project 4\\music-app\\src\\utilities\\playlists-api.js":"9","B:\\Project 4\\music-app\\src\\utilities\\browse-api.js":"10","B:\\Project 4\\music-app\\src\\pages\\ChartsPage\\ChartsPage.jsx":"11","B:\\Project 4\\music-app\\src\\pages\\DiscoverPage\\DiscoverPage.jsx":"12","B:\\Project 4\\music-app\\src\\pages\\GenresPage\\GenresPage.jsx":"13","B:\\Project 4\\music-app\\src\\components\\Carousel\\Carousel.jsx":"14","B:\\Project 4\\music-app\\src\\pages\\PlaylistsPage\\PlaylistsPage.jsx":"15","B:\\Project 4\\music-app\\src\\pages\\PlaylistPage\\PlaylistPage.jsx":"16","B:\\Project 4\\music-app\\src\\components\\PlayerBar\\PlayerBar.jsx":"17","B:\\Project 4\\music-app\\src\\components\\PlayerBar\\Duration.js":"18"},{"size":317,"mtime":1611872355859,"results":"19","hashOfConfig":"20"},{"size":5723,"mtime":1611952796625,"results":"21","hashOfConfig":"20"},{"size":1577,"mtime":1611689927580,"results":"22","hashOfConfig":"20"},{"size":562,"mtime":1611689927578,"results":"23","hashOfConfig":"20"},{"size":3047,"mtime":1611955345915,"results":"24","hashOfConfig":"20"},{"size":1222,"mtime":1611689927579,"results":"25","hashOfConfig":"20"},{"size":1768,"mtime":1611689927576,"results":"26","hashOfConfig":"20"},{"size":1437,"mtime":1611689927576,"results":"27","hashOfConfig":"20"},{"size":1857,"mtime":1611803252155,"results":"28","hashOfConfig":"20"},{"size":327,"mtime":1611726764081,"results":"29","hashOfConfig":"20"},{"size":79,"mtime":1611773462031,"results":"30","hashOfConfig":"20"},{"size":721,"mtime":1611787106056,"results":"31","hashOfConfig":"20"},{"size":77,"mtime":1611773729872,"results":"32","hashOfConfig":"20"},{"size":1164,"mtime":1611784098117,"results":"33","hashOfConfig":"20"},{"size":2129,"mtime":1611864589476,"results":"34","hashOfConfig":"20"},{"size":6901,"mtime":1611897090109,"results":"35","hashOfConfig":"20"},{"size":9123,"mtime":1611950819333,"results":"36","hashOfConfig":"20"},{"size":580,"mtime":1611884014469,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"bt7d4a",{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"B:\\Project 4\\music-app\\src\\index.js",[],["77","78"],"B:\\Project 4\\music-app\\src\\pages\\App\\App.jsx",["79","80","81","82"],"import { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport { getUser } from '../../utilities/users-service';\r\nimport ReactPlayer, {playing} from 'react-player/youtube'\r\nimport './App.css';\r\nimport AuthPage from '../AuthPage/AuthPage';\r\nimport * as playlistApi from '../../utilities/playlists-api';\r\nimport * as browseApi from '../../utilities/browse-api';\r\nimport ChartsPage from '../ChartsPage/ChartsPage';\r\nimport GenresPage from '../GenresPage/GenresPage';\r\nimport DiscoverPage from '../DiscoverPage/DiscoverPage';\r\nimport PlaylistsPage from '../PlaylistsPage/PlaylistsPage';\r\nimport PlaylistPage from '../PlaylistPage/PlaylistPage';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\n// import PlayerBar from '../../components/PlayerBar/PlayerBar';\r\nimport PlayerBar from '../../components/PlayerBar/PlayerBar';\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(getUser());\r\n  const [allPlaylists, setAllPlaylists] = useState([]);\r\n  const [thisPlaylist, setThisPlaylist] = useState([]);\r\n\r\n\r\n  //player \r\n  const [url, setUrl] = useState(null);\r\n  const [played, setPlayed] = useState(0);\r\n  const [loaded, setLoaded] = useState(0);\r\n  const [player, setPlayer] = useState(null);\r\n\r\n  const history = useHistory();\r\n  // const [onProgress, setOnProgress] = useState();\r\n  // const [onePlaylists, setOnePlaylists] = useState([]);\r\n  useEffect(() => {\r\n    async function getAllPlaylists() {\r\n      console.log(user);\r\n      const playlists = await playlistApi.getAll(getUser());\r\n      setAllPlaylists(playlists);\r\n      console.log(playlists);\r\n      \r\n    }\r\n    if(user){\r\n      getAllPlaylists();\r\n    }\r\n  }, [history,user])\r\n  // console.log(user);\r\n  async function handleGetAllPlaylist() {\r\n    const playlists = await playlistApi.getAll(user);\r\n    setAllPlaylists(playlists);\r\n    console.log(playlists);\r\n  }\r\n  async function handleGetOnePlaylist(playlistId) {\r\n    const playlists = await playlistApi.getOne(playlistId);\r\n    // setAllPlaylists(playlists);\r\n    console.log(playlists);\r\n  }\r\n  async function handleDeletePlaylist(playlistId) {\r\n    await playlistApi.deletePlaylist(playlistId);\r\n    const playlists = await playlistApi.getAll(getUser());\r\n    setAllPlaylists(playlists);\r\n    // setAllPlaylists(playlists);\r\n    // console.log(playlists);\r\n  }\r\nasync function handleAddToPlaylist(playlistId, newSong) {\r\n  console.log(newSong)\r\n    for (var i = 0; i < allPlaylists.length; i++) {\r\n      if (allPlaylists[i]._id === playlistId) {\r\n        \r\n        let newPlaylist = allPlaylists[i];\r\n        newPlaylist.songs = [...newPlaylist.songs, newSong];\r\n        const playlists = await playlistApi.addOneToPlaylist(newPlaylist);\r\n        if(thisPlaylist && thisPlaylist._id === playlistId) setThisPlaylist(playlists);\r\n        allPlaylists[i] = playlists;\r\n        setAllPlaylists(allPlaylists);\r\n        break;\r\n      }\r\n\r\n    }\r\n  }  \r\nasync function handleRemoveFromPlaylist(playlistId, songPosition) {\r\n    for (var i = 0; i < allPlaylists.length; i++) {\r\n      if (allPlaylists[i]._id === playlistId) {\r\n        \r\n        let newPlaylist = allPlaylists[i];\r\n        newPlaylist.songs.splice(songPosition,1);\r\n        const playlists = await playlistApi.addOneToPlaylist(newPlaylist);\r\n        if(thisPlaylist && thisPlaylist._id === playlistId) setThisPlaylist(playlists);\r\n        allPlaylists[i] = playlists;\r\n        setAllPlaylists(allPlaylists);\r\n        break;\r\n      }\r\n\r\n    }\r\n  }  \r\n\r\n  const load = (url) => {\r\n    setUrl(url);\r\n    setPlayed(0);\r\n    player.current.seekTo(0)\r\n    setLoaded(0);\r\n    // setPlaying(!playing)\r\n    // this.setState({ playing: !playing })\r\n  }\r\n\r\n  // const handleDuration = (duration) => {\r\n    \r\n  //   console.log('onDuration', duration)\r\n  //   setDuration(duration)\r\n  // }\r\n  \r\n  async function handleCreatePlaylist(newPlaylist) {\r\n\r\n    // setAllPlaylists(allPlaylists.)\r\n    const playlists = await playlistApi.create(newPlaylist);\r\n    setAllPlaylists([...allPlaylists, playlists]);\r\n    console.log(playlists);\r\n  }\r\n  return (\r\n    <main className=\"App\">\r\n      { user ?\r\n        <>\r\n          {/* <div onClick={handleGetAllPlaylist}>click me</div> */}\r\n          {/* <button onClick={pausevid}>pause vid</button>\r\n          <button onClick={playvid}>play vid</button> */}\r\n          <NavBar user={user} setUser={setUser} allPlaylist={allPlaylists} handleCreatePlaylist={handleCreatePlaylist} handleGetOnePlaylist={handleGetOnePlaylist} />\r\n          {/* <ReactPlayer url='https://www.youtube.com/watch?v=ysz5S6PUM-U' playing={playing} onDuration={handleDuration}/> */}\r\n          <Switch>\r\n            <Route path=\"/charts\">\r\n              <ChartsPage />\r\n            </Route>\r\n            <Route path=\"/discover\">\r\n              <DiscoverPage />\r\n            </Route>\r\n            <Route path=\"/genres\">\r\n              <GenresPage />\r\n            </Route>\r\n            <Route path=\"/playlists\">\r\n              <PlaylistsPage allPlaylist={allPlaylists} handleDeletePlaylist={handleDeletePlaylist}/>\r\n            </Route>\r\n            <Route path=\"/playlist\">\r\n              <PlaylistPage load={load} thisPlaylist={thisPlaylist} setThisPlaylist={setThisPlaylist} handleRemoveFromPlaylist={handleRemoveFromPlaylist} handleAddToPlaylist={handleAddToPlaylist} allPlaylist={allPlaylists} />\r\n            </Route>\r\n            <Redirect to=\"/discover\" />\r\n          </Switch>\r\n          <PlayerBar load = {load}url={url} setUrl={setUrl} played={played} setPlayed={setPlayed} player={player} setPlayer={setPlayer} loaded={loaded} setLoaded={setLoaded} />\r\n\r\n        </>\r\n        :\r\n        <AuthPage setUser={setUser} />\r\n      }\r\n    </main>\r\n  );\r\n}\r\n","B:\\Project 4\\music-app\\src\\utilities\\users-service.js",[],"B:\\Project 4\\music-app\\src\\pages\\AuthPage\\AuthPage.jsx",[],"B:\\Project 4\\music-app\\src\\components\\NavBar\\NavBar.jsx",[],"B:\\Project 4\\music-app\\src\\utilities\\users-api.js",[],"B:\\Project 4\\music-app\\src\\components\\SignUpForm\\SignUpForm.jsx",[],"B:\\Project 4\\music-app\\src\\components\\LoginForm\\LoginForm.jsx",[],"B:\\Project 4\\music-app\\src\\utilities\\playlists-api.js",[],"B:\\Project 4\\music-app\\src\\utilities\\browse-api.js",[],"B:\\Project 4\\music-app\\src\\pages\\ChartsPage\\ChartsPage.jsx",[],"B:\\Project 4\\music-app\\src\\pages\\DiscoverPage\\DiscoverPage.jsx",[],"B:\\Project 4\\music-app\\src\\pages\\GenresPage\\GenresPage.jsx",[],"B:\\Project 4\\music-app\\src\\components\\Carousel\\Carousel.jsx",[],"B:\\Project 4\\music-app\\src\\pages\\PlaylistsPage\\PlaylistsPage.jsx",[],"B:\\Project 4\\music-app\\src\\pages\\PlaylistPage\\PlaylistPage.jsx",[],"B:\\Project 4\\music-app\\src\\components\\PlayerBar\\PlayerBar.jsx",["83","84","85","86","87","88"],"import React, { Component, useState, useRef, useEffect } from 'react'\r\nimport { findDOMNode } from 'react-dom'\r\nimport { hot } from 'react-hot-loader'\r\nimport screenfull from 'screenfull';\r\nimport './PlayerBar.css'\r\nimport './PlayerBarIconsCss/flaticon.css'\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport Duration from './Duration'\r\n\r\n\r\nexport default function PlayerBar({ load, url, setUrl, played, setPlayed, player, setPlayer, loaded, setLoaded }) {\r\n    // const [url, setUrl] = useState(null);\r\n    const [playing, setPlaying] = useState(true);\r\n    const [volume, setVolume] = useState(0.8);\r\n    const [muted, setMuted] = useState(false);\r\n    // const [played, setPlayed] = useState(0);\r\n    // const [loaded, setLoaded] = useState(0);\r\n    const [duration, setDuration] = useState(0);\r\n    const [loop, setLoop] = useState(false);\r\n    const [seeking, setSeeking] = useState(false);\r\n    const [state, setState] = useState(null);\r\n    // const [player, setPlayer ] =useState(null);\r\n\r\n    // useEffect(load = (url) => {\r\n    //     setUrl(url);\r\n    //     setPlayed(0);\r\n    //     setLoaded(0);\r\n    //     // setPlaying(!playing)\r\n    //     // this.setState({ playing: !playing })\r\n    // })\r\n\r\n    // const load = (url) => {\r\n    //     setUrl(url);\r\n    //     setPlayed(0);\r\n    //     player.current.seekTo(0)\r\n    //     setLoaded(0);\r\n    //     // setPlaying(!playing)\r\n    //     // this.setState({ playing: !playing })\r\n    // }\r\n\r\n\r\n    const handlePlayPause = () => {\r\n        setPlaying(!playing)\r\n        // this.setState({ playing: !playing })\r\n    }\r\n\r\n    const handleToggleLoop = () => {\r\n        setLoop(!loop)\r\n        // this.setState({ loop: !loop })\r\n    }\r\n\r\n    const handleVolumeChange = (e) => {\r\n        setVolume(parseFloat(e.target.value))\r\n        // this.setState({ volume: parseFloat(e.target.value) })\r\n    }\r\n    const handleToggleMuted = () => {\r\n        setMuted(!muted)\r\n        // this.setState({ muted: !this.state.muted })\r\n    }\r\n\r\n    const handlePlay = () => {\r\n        console.log('onPlay')\r\n        setPlaying(true)\r\n        // this.setState({ playing: true })\r\n    }\r\n\r\n    const handlePause = () => {\r\n        console.log('onPause')\r\n        setPlaying(false)\r\n        // this.setState({ playing: false })\r\n    }\r\n    const handleProgress = (state) => {\r\n        // console.log('onProgress', state)\r\n        setPlayed(state.played);\r\n        // We only want to update time slider if we are not currently seeking\r\n        // setState(state)\r\n        if (!seeking) {\r\n            setState(state)\r\n            // const [seeking, setSeeking]= setState(state)\r\n            // this.setState(state)\r\n        }\r\n    }\r\n    const handleSeekMouseDown = (e) => {\r\n        setSeeking(true)\r\n        // this.setState({ seeking: true })\r\n    }\r\n    const handleSeekChange = (e) => {\r\n        setPlayed(parseFloat(e.target.value))\r\n        // this.setState({ played: parseFloat(e.target.value) })\r\n    }\r\n\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        // console.log(ref.player)\r\n        // const player = ref\r\n        setPlayer(ref);\r\n        // ref.seekTo(parseFloat(e.target.value))\r\n        // console.log(ref);\r\n        // player = ref.player;\r\n    }, [ref])\r\n\r\n    const handleSeekMouseUp = (e) => {\r\n        // console.log(player);\r\n        setSeeking(false)\r\n        // this.setState({ seeking: false })\r\n        player.current.seekTo(parseFloat(e.target.value))\r\n        // this.player.seekTo(parseFloat(e.target.value))\r\n    }\r\n\r\n    const handleDuration = (duration) => {\r\n        console.log('onDuration', duration)\r\n        setDuration(duration)\r\n        // this.setState({ duration })\r\n    }\r\n    // const handleToggleLoop = () => {\r\n    //     setLoop(!loop)\r\n    //     // this.setState({ loop: !this.state.loop })\r\n\r\n    // }\r\n\r\n    // const ref = (player) => {\r\n\r\n    // }\r\n    return (\r\n        <div className='app'>\r\n            <section className='section'>\r\n                <h1>ReactPlayer Demo</h1>\r\n                <div className='player-wrapper'>\r\n                    <ReactPlayer\r\n                        ref={ref}\r\n                        className='react-player'\r\n                        width='100%'\r\n                        height='100%'\r\n                        url={url}\r\n                        // pip={pip}\r\n                        playing={playing}\r\n                        // controls={controls}\r\n                        // light={light}\r\n                        loop={loop}\r\n                        // playbackRate={playbackRate}\r\n                        volume={volume}\r\n                        muted={muted}\r\n                        // onReady={() => console.log('onReady')}\r\n                        // onStart={() => console.log('onStart')}\r\n                        onPlay={handlePlay}\r\n                        // onEnablePIP={handleEnablePIP}\r\n                        // onDisablePIP={handleDisablePIP}\r\n                        onPause={handlePause}\r\n                        onBuffer={() => console.log('onBuffer')}\r\n                        onSeek={e => console.log('onSeek', e)}\r\n                        // onEnded={handleEnded}\r\n                        onError={e => console.log('onError', e)}\r\n                        onProgress={handleProgress}\r\n                        onDuration={handleDuration}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className='player-control-bar'>\r\n                    <div className='song-info'>\r\n                        <img src=\"\" alt=\"\" />\r\n                        <span>\r\n                            <span className='title'>Title</span>\r\n                            <span className='artist'>artist</span>\r\n                        </span>\r\n                    </div>\r\n                    <div className='controls'>\r\n                        <span className='shuffle flaticon-shuffle'></span>\r\n                        <span className='previous flaticon-previous'></span>\r\n                        {!playing ? <span onClick={handlePlayPause} className='flaticon-right-triangular-arrowhead play'></span> : <span onClick={handlePlayPause} className='flaticon-pause-symbol pause'></span>}\r\n                        <span className='next flaticon-next'></span>\r\n                        <span className='loop'>\r\n                            {/* <input id='loop' type='checkbox' checked={loop} onChange={handleToggleLoop} /> */}\r\n                            <span onClick={handleToggleLoop} className={loop ? 'flaticon-arrow-loop' : 'flaticon-arrow-loop bold' }></span> \r\n                            </span>\r\n                    </div>\r\n                    <div className='slider'>\r\n                        <span className='elapsed'><Duration seconds={duration * played} /></span>\r\n                        <span className='seek-slider'><input\r\n                            type='range' min={0} max={0.999999} step='any'\r\n                            value={played}\r\n                            onMouseDown={handleSeekMouseDown}\r\n                            onChange={handleSeekChange}\r\n                            onMouseUp={handleSeekMouseUp}\r\n                        /></span>\r\n                        <span className='remaining'><Duration seconds={duration * (1 - played)}/></span>\r\n                    </div>\r\n                    <div className='volume'>\r\n                        <span className='mute'>\r\n                            {muted || volume ===0 ? <span onClick={handleToggleMuted} className='flaticon-no-sound'></span> : <span onClick={handleToggleMuted} className='flaticon-sound'></span>}\r\n                            {/* <input id='muted' type='checkbox' checked={muted} onChange={handleToggleMuted} /> */}\r\n                            </span>\r\n                        <span className='volume-slider'> <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} /></span>\r\n                    </div>\r\n                </div>\r\n                {/* <button onClick={handlePlayPause}>{playing ? 'Pause' : 'Play'}</button>\r\n                <h3>mute <input id='muted' type='checkbox' checked={muted} onChange={handleToggleMuted} /></h3>\r\n                <h3>volume <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} /></h3>\r\n                <h3>loop <input id='loop' type='checkbox' checked={loop} onChange={handleToggleLoop} /></h3>\r\n                <h3>elapsed: <Duration seconds={duration * played} /></h3>\r\n                <h3>remaining: <Duration seconds={duration * (1 - played)} /></h3>\r\n                <h3>duration: <Duration seconds={duration} /></h3>\r\n                <h3><button onClick={() => load('https://www.youtube.com/watch?v=IoO082wJ5GM')}>load this\r\n                </button></h3>\r\n                <h3>seek <input\r\n                    type='range' min={0} max={0.999999} step='any'\r\n                    value={played}\r\n                    onMouseDown={handleSeekMouseDown}\r\n                    onChange={handleSeekChange}\r\n                    onMouseUp={handleSeekMouseUp}\r\n                /></h3> */}\r\n\r\n            </section>\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n","B:\\Project 4\\music-app\\src\\components\\PlayerBar\\Duration.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":19},{"ruleId":"93","severity":1,"message":"97","line":4,"column":22,"nodeType":"95","messageId":"96","endLine":4,"endColumn":29},{"ruleId":"93","severity":1,"message":"98","line":8,"column":13,"nodeType":"95","messageId":"96","endLine":8,"endColumn":22},{"ruleId":"93","severity":1,"message":"99","line":46,"column":18,"nodeType":"95","messageId":"96","endLine":46,"endColumn":38},{"ruleId":"93","severity":1,"message":"100","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"101","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"102","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":13},{"ruleId":"93","severity":1,"message":"103","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":18},{"ruleId":"93","severity":1,"message":"104","line":21,"column":12,"nodeType":"95","messageId":"96","endLine":21,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":101,"column":8,"nodeType":"107","endLine":101,"endColumn":13,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'ReactPlayer' is defined but never used.","Identifier","unusedVar","'playing' is defined but never used.","'browseApi' is defined but never used.","'handleGetAllPlaylist' is defined but never used.","'Component' is defined but never used.","'findDOMNode' is defined but never used.","'hot' is defined but never used.","'screenfull' is defined but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPlayer'. Either include it or remove the dependency array. If 'setPlayer' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [ref, setPlayer]",{"range":"114","text":"115"},[3226,3231],"[ref, setPlayer]"]